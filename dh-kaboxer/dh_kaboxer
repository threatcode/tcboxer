#! /usr/bin/perl

use strict;
use warnings;

use Debian::Debhelper::Dh_Lib;
use File::Copy qw/cp/;
use File::Copy::Recursive qw/dircopy/;
use File::Temp qw/tempdir/;

init(options => {
    'build-opts=s' => \$dh{KABOXER_BUILD_OPTS},
    'install-opts=s' => \$dh{KABOXER_INSTALL_OPTS},
     });

foreach my $k (('BUILD','INSTALL')) {
    my $v = "KABOXER_${k}_OPTS";
    if (defined $dh{$v}) {
	my $u=$dh{$v};
	undef $dh{$v};
	push @{$dh{$v}}, split(/\s+/,$u);
    }
}

for my $package (@{ $dh{DOPACKAGES} }) {
  autoscript($package, 'postinst', 'postinst-kaboxer', "s/#PACKAGE#/$package/g");
  autoscript($package, 'postrm', 'postrm-kaboxer', "s/#PACKAGE#/$package/g");
  my $tmp = tmpdir($package);
  install_dir("$tmp/usr/share/kaboxer");
  doit("kaboxer", "build", "--save", "--tarball", "$tmp/usr/share/kaboxer/$package.tar", @{$dh{KABOXER_BUILD_OPTS}}, "$package");
  doit("kaboxer", "install", "--destdir", "$tmp", "--prefix", "/usr", "--tarball", "$tmp/usr/share/kaboxer/$package.tar", @{$dh{KABOXER_INSTALL_OPTS}}, "$package");
  install_dir("$tmp/etc/kaboxer");
  addsubstvar($package, 'misc:Depends', 'docker.io');
  addsubstvar($package, 'misc:Depends', 'kaboxer (>= 0.3.4)');
}

__END__

=head1 NAME

dh_kaboxer - handle kaboxer

=head1 SYNOPSIS

B<dh_kaboxer> [S<I<debhelper options>>]

=head1 DESCRIPTION

dh_kaboxer is a debhelper program that eases generation and deployment of Kaboxer images

A debhelper addon is also provided.  This makes it possible to just use

  #!/usr/bin/make -f
  %:
          dh $@ --with kaboxer

for F<debian/rules>.

=head1 SEE ALSO

L<debhelper(7)>

=head1 COPYRIGHT AND LICENSE

Based on I<dh_perl_openssl> in the I<perl-openssl-defaults> package by Niko Tyni.

Copyright 2010, Ansgar Burchardt <ansgar@debian.org>

Copyright 2016, Niko Tyni <ntyni@debian.org>

Copyright 2019, Roland Mas <lolando@debian.org>

This program is free software, you can redistribute it and/or modify it under
the same terms as Perl itself.
